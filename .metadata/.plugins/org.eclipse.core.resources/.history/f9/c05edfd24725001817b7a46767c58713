package com.giacomini.andrea.OCA.MethodsAndEncapsulation.ApplyingAccessModifiers;

/*
 * N.B: Quando un metodo è dichiarato come PROTECTED significa che è accedibile dalle classi che estendo la sua classe di appartenenza
 * 		e dalle altre classi appartenenti al medesimo package.
 * 		
 * 		Le regole applicabili in determinati scenari:
 * 			scenario1 - un membro protected è usato senza riferisi ad una variabile;
 * 			scenario2 - un membro protected è usato attraverso l'uso di una variabile;
 * 
 *   	Guarda gli esempi: com.giacomini.andrea.MethodsAndEncapsulation.ApplyingAccessModifiers.Examples.pond.shore.Bird;
 *   					   com.giacomini.andrea.MethodsAndEncapsulation.ApplyingAccessModifiers.Examples.pond.goose.Gosling;
 *   					   com.giacomini.andrea.MethodsAndEncapsulation.ApplyingAccessModifiers.Examples.pond.shore.BirdWatcher;
 *   					   com.giacomini.andrea.MethodsAndEncapsulation.ApplyingAccessModifiers.Examples.pond.inland.BirdWatcherFromAfar;
 *   					   com.giacomini.andrea.MethodsAndEncapsulation.ApplyingAccessModifiers.Examples.pond.swam.Swan;
 *   					   com.giacomini.andrea.MethodsAndEncapsulation.ApplyingAccessModifiers.Examples.pond.goose.Goose;
 *   					   com.giacomini.andrea.MethodsAndEncapsulation.ApplyingAccessModifiers.Examples.pond.duck.GooseWatcher;
 *   
 */

public class ProtectedAccess {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
