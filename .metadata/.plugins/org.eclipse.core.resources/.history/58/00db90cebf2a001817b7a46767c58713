package com.giacomini.andrea.OCP.AdvancedClassDesign.CreatingNestedClasses;

/*
 * N.B: Una classe innestata (nested) è una classe definita all'interno di un'altra classe. Una classe innestata che non è STATIC
 * 		viene chiamata "inner class". Esistono quatro tipo di classe innestata:
 * 
 * 			1- una classe inner membro è una classe definita allo stesso livello di una variabile d'istanza. Non è STATIC.
 * 			   Spesso, questa è solo riferita come classe inner senza dire esplicitamente il tipo;
 * 
 * 			2- una classe inner locale è definita all'interno di un metodo;
 * 
 * 			3- una classe inner anonima è una classe speciale di una classe inner locale (2-) che non ha un nome;
 * 
 *  		4- una classe innestata STATIC è una classe STATIC che viene definita allo stesso livello delle variabili STATIC;
 *  
 *  	Ci sono alcuni benifici nell'usare le classi innestate. Esse possono incapsulare classi helper limitandole alle classi 
 *  	contenute. Possono facilitare la creazione di classi che saranno usate in un solo posto. Possono rendere il codice di facile
 *  	lettura. Possono al contrario rendere il codice difficile da leggere se usate impropriamente. Sfortunatamente, l'esame
 *  	testa questi casi estremi/limite dove il programmatore non userebbe effettivamente la classe annidata.
 *  
 */

public class CreatingNestedClasses {

	public static void main(String[] args){
		
		
	}
}