package com.giacomini.andrea.OCA.MethodsAndEncapsulation.ApplyingAccessModifiers;

/*
 * N.B: Gli import che già conosciamo servono per importare classi, mentre gli "static import" servono per importare 
 * 		membri static di una classe. Come per l'import classico è possibile usare l'asterisco (*) oppure specificare 
 * 		il nome del membro/classe da importare.
 * 
 *  	Se si dovesse scrivere un metodo con lo stesso nome di un metodo static importato (ex: "asList()"), JAVA darà precedenza 
 *  	al metodo scritto dall'utente.
 *  
 *  	Esattamente come per l'import di intere classi, anche con l'import di memebri static NON è possibile importare due membri,
 *  	(metodi o campi che siano) da due package diversi, aventi lo stesso nome.
 *  	JAVA non saprebbe quale dei due scegliere e si troverebbe in una situazione di ambiguità.
 */

import java.util.Arrays;
import java.util.List;

import static com.giacomini.andrea.OCA.MethodsAndEncapsulation.ApplyingAccessModifiers.Examples.StaticValueToImport.NUM_VALUE_1;
// static import - del metodo static "asList()" della classe "Arrays".
import static java.util.Arrays.asList;

public class StaticImport {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		// 1 MODO
//		List<String> list = Arrays.asList("one", "two");
		
		// 2 MODO
		List<String> list = asList("one", "two");		

	}

}
